#!/bin/bash

# VGA CONTROLLER
# ============================================================================
# Here we scan VGA Controllers to select and install the appropriate drivers.
# In case of dual controller (intel+nvidia) we use Bumblebee.
# User can choose to install proprietary drivers instead of open source ones.
# OpenGL and Hardware Acceleration support available.
# More informations on VGA Driver installation are available in the official
# documentation: https://wiki.archlinux.org/index.php/Xorg#Driver_installation

_scan_vga_controller() {

	_info "Scanning VGA Controller"
	vga_number=$(lspci | grep -e VGA -e 3D | wc -l)
    lspci | grep -e VGA -e 3D | egrep -i "nvidia|intel"

	# DUAL VGA CONTROLLER Intel & Nvidia >>> Bumblebee
	if [[ $? -eq 0 && ${vga_number} -ge "2" ]]; then

		_note "System compatible to install Bumblebee."
		_confirm "Use Nvidia proprietary driver instead of open source?"
	    case ${confirm} in
            y|Y)
		        export vga_driver="bumblebee_nvidia"
		        export openGL_x64="openGL_x64_nvidia"
				export openGL_x86="openGL_x86_nvidia"
				export hard_video="hard_video_nvidia"
                ;;
            *)
		    	export vga_driver="bumblebee_nouveau"
		    	export openGL_x64="openGL_x64_nouveau"
				export openGL_x86="openGL_x86_nouveau"
				export hard_video="hard_video_nouveau"
                ;;
	    esac
	    unset confirm

	# SINGLE VGA CONTROLLER
	else

		# NVIDIA
		nvidia_card=$(lspci | grep -e VGA -e 3D | grep -ie nvidia)
		if [[ $? -eq 0 ]]; then
			_note "${nvidia_card##*: } detected."
			_confirm "Use Nvidia proprietary driver instead of open source?"
		    case ${confirm} in
                y|Y)
    		        export vga_driver="nvidia"
    		        export openGL_x64="openGL_x64_nvidia"
    				export openGL_x86="openGL_x86_nvidia"
    				export hard_video="hard_video_nvidia"
                    ;;
		        *)
    		    	export vga_driver="nouveau"
    		    	export openGL_x64="openGL_x64_nouveau"
    				export openGL_x86="openGL_x86_nouveau"
    				export hard_video="hard_video_nouveau"
                    ;;
		    esac
		    unset confirm
		else

			# AMD / ATI
			amd_card=$(lspci | grep -e VGA -e 3D | grep -e ATI -e AMD)
			if [[ $? -eq 0 ]]; then
				_note "${amd_card##*: } detected."
			    export vga_driver="amd"
			    export openGL_x64="openGL_x64_amd"
				export openGL_x86="openGL_x86_amd"
				export hard_video="hard_video_amd"

			else

				# INTEL
				intel_card=$(lspci | grep -e VGA -e 3D | grep -i intel)
				if [[ $? -eq 0 ]]; then
					_note "${intel_card##*: } detected."
					export vga_driver="intel"
					export openGL_x64="openGL_x64_intel"
					export openGL_x86="openGL_x86_intel"
					export hard_video="hard_video_intel"

				# DEFAULT
				else
					_note "Controller not found, default driver will be used."
					export vga_driver="default"
				fi
			fi
		fi
	fi
}

_install_vga_controller() {

    # VGA Controller
    _info "Installing VGA Driver"
    install_vga="_${vga_driver}"
    _chroot "pacman --noconfirm -S ${!install_vga}"
    if [[ ${vga_driver} == "bumblebee" ]]; then
        _note "Enabling Bumblebee service"
        _chroot "systemctl enable bumblebeed"
    fi

    # OpenGL & Hardware Video Acceleration
    if [[ ${vga_driver} != "default" ]]; then
        _info "Installing OpenGL & Hardware Video Acceleration"
        install_openGLx64="_${openGL_x64}"
        install_hard="_${hard_video}"
        _chroot "pacman --noconfirm -S ${!install_openGLx64} ${!install_hard}"

        if [[ ! -z ${multilib+x} ]]; then
            install_openGLx86="_${openGL_x86}"
            _chroot "pacman --noconfirm -S ${!install_openGLx86}"
        fi
    fi
}
